{"version":3,"sources":["context.js","components/City.js","components/ListCitys.js","components/Loader.js","components/Content.js","App.js","index.js"],"names":["Context","React","createContext","City","place","index","removeContent","useContext","classes","activePlace","push","className","join","onClick","name","ListCitys","citys","map","e","i","cityID","Loader","Content","city","useState","placeName","setPlaceName","weatherData","setWeatherData","useEffect","fetch","apiURL","then","response","json","data","catch","error","console","log","weather","iconUrl","icon","description","src","alt","main","temp","wind","speed","App","PLACES","setActivPlace","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"uRAIeA,G,YAFCC,IAAMC,iBC2BPC,MAxBf,YAA8B,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,MACbC,EAAiBC,qBAAWP,GAA5BM,cAEHE,EAAU,GAMd,OAPsBD,qBAAWP,GAA1BS,cAGYJ,GACjBG,EAAQE,KAAK,SAIb,6BACE,wBAAQC,UAAWH,EAAQI,KAAK,KACxBC,QAAS,WAAOP,EAAcD,IADtC,SACgDD,EAAMU,UCI7CC,MAff,YAA4B,IAARC,EAAO,EAAPA,MAClB,OACE,oBAAIL,UAAU,QAAd,SACGK,EAAMC,KAAI,SAACC,EAAGC,GACb,OAAO,cAAC,EAAD,CAAMf,MAAOc,EAAkBb,MAAOc,GAAjBD,EAAEE,c,YCYvBC,MAnBf,WACE,OACE,sBAAKV,UAAU,cAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BC4BSW,MAzCf,YAAiC,IAAfC,EAAc,EAAdA,KAAMH,EAAQ,EAARA,OAAQ,EACII,mBAAS,MADb,mBACvBC,EADuB,KACZC,EADY,OAEQF,mBAAS,MAFjB,mBAEvBG,EAFuB,KAEVC,EAFU,KAmB9B,GAfAC,qBAAU,WAMRC,MAFiBC,sDAFFX,EAEEW,gEAGdC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJT,EAAaH,GACbK,EAAeO,MAElBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,6LAAyCF,QACpE,CAACd,EAAMH,IAENO,EAMG,CACL,IAAMa,EAAUb,EAAYa,QAAQ,GAC9BC,EAAU,mCAAqCD,EAAQE,KAAO,OAEpE,OACE,sBAAK/B,UAAU,UAAf,UACE,8EAAcc,EAAd,yCAAiCe,EAAQG,eACzC,qBAAKC,IAAKH,EAASI,IAAKL,EAAQG,cAChC,qGAAgB,mCAAShB,EAAYmB,KAAKC,KAA1B,cAChB,kHAAmB,mCAASpB,EAAYqB,KAAKC,MAA1B,0BAdvB,OACE,qBAAKtC,UAAU,UAAf,SACE,cAAC,EAAD,OCeOuC,MApCf,WACE,IAAMC,EAAS,CACX,CAAErC,KAAM,iCAAWM,OAAQ,UAC3B,CAAEN,KAAM,uCAAWM,OAAQ,UAC3B,CAAEN,KAAM,iCAAWM,OAAQ,UAC3B,CAAEN,KAAM,uCAAWM,OAAQ,UAC3B,CAAEN,KAAM,6CAAWM,OAAQ,UAC3B,CAAEN,KAAM,6CAAWM,OAAQ,WAPlB,EAUwBI,mBAAS,GAVjC,mBAUNf,EAVM,KAUO2C,EAVP,KAiBb,OACE,cAAC,EAAQC,SAAT,CAAkBC,MAAO,CAAChD,cAN5B,SAAuBD,GACrB+C,EAAc/C,IAK2BI,eAAzC,SACE,sBAAKE,UAAU,YAAf,UACE,2LAAgC,uBAChC,+GAEA,uBACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAWK,MAAOmC,IAClB,cAAC,EAAD,CAAS5B,KAAM4B,EAAO1C,GAAaK,KAC1BM,OAAQ+B,EAAO1C,GAAaW,QACvBX,YC3BxB8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e9858d4e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport './City.css'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nfunction City({place, index}){\r\n  const {removeContent} = useContext(Context)\r\n  const {activePlace} = useContext(Context)\r\n  let classes = []\r\n  \r\n  if(activePlace === index){\r\n    classes.push('color')\r\n  }\r\n\r\n  return(\r\n    <li>\r\n      <button className={classes.join(' ')} \r\n              onClick={() => {removeContent(index)}}>{place.name}\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nCity.propTypes = {\r\n  place: PropTypes.object.isRequired,\r\n  removeContent: PropTypes.func,\r\n  index: PropTypes.number,\r\n}\r\n\r\nexport default City","import React from 'react'\r\nimport './ListCitys.css'\r\nimport City from './City.js'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction ListCitys({citys}){\r\n  return(\r\n    <ul className='citys'>\r\n      {citys.map((e, i)=> {\r\n        return <City place={e} key={e.cityID} index={i}/>\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nListCitys.propTypes = {\r\n  citys: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n}\r\n\r\n\r\nexport default ListCitys","import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader(){\r\n  return (\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import React, {useState, useEffect} from 'react'\r\nimport './Content.css'\r\nimport Loader from './Loader.js'\r\n\r\nfunction Content({city, cityID}){\r\n  const [placeName, setPlaceName] = useState(null)\r\n  const [weatherData, setWeatherData] = useState(null)\r\n\r\n  useEffect(()=> {\r\n    const apiURL = 'https://api.openweathermap.org/data/2.5/';\r\n    const cityId = cityID;\r\n    const apiKey = '012244e216d87e61ae79056438d73ff3';\r\n    const apiQuery = apiURL + 'weather?id=' + cityId + '&units=metric&lang=ru&appid=' + apiKey;\r\n  \r\n    fetch(apiQuery)\r\n      .then(response => response.json())\r\n      .then(data => { \r\n        setPlaceName(city)\r\n        setWeatherData(data)\r\n      })\r\n    .catch(error => console.log('Ошибка при передаче данных. Причина:' + error))\r\n  }, [city, cityID])\r\n\r\n  if(!weatherData){\r\n    return (\r\n      <div className='content'>\r\n        <Loader/>\r\n      </div>\r\n    )\r\n  } else {\r\n    const weather = weatherData.weather[0]\r\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\"\r\n\r\n    return(\r\n      <div className='content'>\r\n        <h3>В городе {placeName} сейчас {weather.description}</h3>\r\n        <img src={iconUrl} alt={weather.description}/>\r\n        <p>Температура: <strong>{weatherData.main.temp}°C</strong></p>\r\n        <p>Скорость ветра: <strong>{weatherData.wind.speed} м/с</strong></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Content","import React, {useState} from 'react'\nimport ListCitys from './components/ListCitys.js'\nimport Content from './components/Content.js'\nimport Context from './context.js'\n\nfunction App() {\n  const PLACES = [\n      { name: \"Минск\",   cityID: \"625144\"},\n      { name: \"Гомель\",  cityID: \"627907\"},\n      { name: \"Брест\",   cityID: \"629634\"},\n      { name: \"Гродно\",  cityID: \"627904\"},\n      { name: \"Витебск\", cityID: \"620127\"},\n      { name: \"Могилев\", cityID: \"625665\"},\n  ]\n\n  const [activePlace, setActivPlace] = useState(0)\n  \n  function removeContent(index){\n    setActivPlace(index)\n  }\n\n\n  return (\n    <Context.Provider value={{removeContent, activePlace}}>\n      <div className=\"container\">\n        <h1>Погода в Республике Беларусь<br/>\n        <span>(из сервиса openweathermap)</span>\n        </h1>\n        <hr/>\n        <div className='wrapper'>\n          <ListCitys citys={PLACES}/>\n          <Content city={PLACES[activePlace].name}\n                   cityID={PLACES[activePlace].cityID}\n                   key={activePlace}\n          />\n        </div>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}